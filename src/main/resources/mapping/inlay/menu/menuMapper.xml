<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="polar.island.inlay.menu.dao.MenuDao">
	<!-- 列表的列名 -->
	<sql id="listColumns">
			a.id AS "id",
			a.name AS "name",
			a.icon AS "icon",
			a.path AS "path",
			a.orderNum AS "orderNum",
			a.parentId AS "parentId",
			a.defaultOpen AS "defaultOpen"
	</sql>
	<!-- 详情的列名 -->
	<sql id="detailColumns">
			a.id AS "id",
			a.name AS "name",
			a.icon AS "icon",
			a.path AS "path",
			a.orderNum AS "orderNum",
			a.parentId AS "parentId",
			a.defaultOpen AS "defaultOpen"
	</sql>
	<!-- 表名,可能查询时会和一些其他的表关联 -->
	<sql id="tables">
		t_polar_menu a
	</sql>
	<!-- 表名 -->
	<sql id="table">
		t_polar_menu
	</sql>
	<!-- 查询多条数据时的条件 -->
	<sql id="searchMultiWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="name != null and name != ''">
				AND a.name=#{name}
			</if>
			<if test="icon != null and icon != ''">
				AND a.icon=#{icon}
			</if>
			<if test="path != null and path != ''">
				AND a.path=#{path}
			</if>
			<if test="orderNum != null">
				AND a.orderNum=#{orderNum}
			</if>
			<if test="parentId != null">
				AND a.parentId=#{parentId}
			</if>
		</where>
	</sql>
	<!-- 查询单条数据时的条件 -->
	<sql id="searchOneWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="name != null and name != ''">
				AND a.name=#{name}
			</if>
			<if test="icon != null and icon != ''">
				AND a.icon=#{icon}
			</if>
			<if test="path != null and path != ''">
				AND a.path=#{path}
			</if>
			<if test="orderNum != null">
				AND a.orderNum=#{orderNum}
			</if>
			<if test="parentId != null">
				AND a.parentId=#{parentId}
			</if>
		</where>
	</sql>	
	<!-- 排序条件 -->
	<sql id="orderCondition">
		order by a.parentId asc,a.orderNum asc
	</sql>
	<!-- 删除条件(物理删除的删除条件) -->
	<sql id="deletePhysicalWheres">
		WHERE 1!=1
		<trim prefix="OR" prefixOverrides="AND">
			<if test="id != null and id != ''">
				AND id=#{id}
			</if>
				<if test="name != null and name != ''">
					AND name=#{name}
				</if>
				<if test="icon != null and icon != ''">
					AND icon=#{icon}
				</if>
				<if test="path != null and path != ''">
					AND path=#{path}
				</if>
				<if test="orderNum != null">
					AND orderNum=#{orderNum}
				</if>
				<if test="parentId != null">
					AND parentId=#{parentId}
				</if>
		</trim>
	</sql>
	<insert id="insert" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		<include refid="table" />
		(

			name,
			icon,
			path,
			orderNum,
			parentId,
			defaultOpen
		) VALUES (

			#{name},
			#{icon},
			#{path},
			#{orderNum},
			#{parentId},
			#{defaultOpen}
		)
	</insert>
	<!-- 查询一条数据(依据数据编号) -->
	<select id="selectOneById" resultType="MenuEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		where a.id=#{id}
	</select>
	<!-- 查询一条数据（依据查询条件） -->
	<select id="selectOneByCondition" resultType="MenuEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchOneWheres" />
	</select>
	<!-- 查询集合 -->
	<select id="selectList" resultType="MenuEntity"
		parameterType="java.util.Map">
		SELECT
		<include refid="listColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
		<include refid="orderCondition" />
	</select>
	<!-- 查询带有分页的列表 -->
	<select id="selectPageList" resultType="MenuEntity"
		parameterType="java.util.Map">
		<choose>
			<when test="'${polar_dataBaseType}' == 'oracle'">
				SELECT * FROM (
				select rownum rowsize,innertable.* from
				(
				SELECT <include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				) innertable
				)
				WHERE rowsize > #{pageStartNumber} and rowsize &lt;= #{pageOffsetNumber}
			</when>
			<when test="'${polar_dataBaseType}' == 'sqlServer'">
				SELECT TOP ${rows} A.*
				FROM
				(
				SELECT
				ROW_NUMBER() OVER (<include refid="orderCondition" />) AS RowNumber,
				<include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				)   as A
				WHERE RowNumber > #{pageStartNumber}
			</when>
			<otherwise>
				SELECT
				<include refid="listColumns" />
				FROM
				<include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				limit #{pageStartNumber},#{pageOffsetNumber}
			</otherwise>
		</choose>
	</select>
	<!-- 依据条件查询符合条件的数量 -->
	<select id="selectCount" resultType="long" parameterType="java.util.Map">
		SELECT count(a.id)
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
	</select>
	<!-- 依据编号更新数据，所有字段都更新。 -->
	<update id="updateAll" parameterType="java.util.Map">
		update
		<include refid="table" />
		set
			name=#{name},
			icon=#{icon},
			path=#{path},
			orderNum=#{orderNum},
			parentId=#{parentId},
			defaultOpen=#{defaultOpen}
		where id=#{id}
	</update>
	<!-- 依据编号更新数据，更新存在的字段,有效性字段也可更新。 -->
	<update id="updateField" parameterType="java.util.Map">
		update
		<include refid="table" />
		<trim prefix="set" prefixOverrides=",">
				<if test="_parameter.containsKey('name')">
					,name=#{name}
				</if>
				<if test="_parameter.containsKey('icon')">
					,icon=#{icon}
				</if>
				<if test="_parameter.containsKey('path')">
					,path=#{path}
				</if>
				<if test="_parameter.containsKey('orderNum')">
					,orderNum=#{orderNum}
				</if>
				<if test="_parameter.containsKey('parentId')">
					,parentId=#{parentId}
				</if>
		</trim>
		where id=#{id}
	</update>
	<!-- 依据编号物理删除 -->
	<delete id="deleteByIdPhysical" parameterType="string">
		delete from
		<include refid="table" />
		where id=#{id}
	</delete>
	<!-- 依据条件物理删除 -->
	<delete id="deleteByConditionPhysical" parameterType="string">
		delete from
		<include refid="table" />
		<include refid="deletePhysicalWheres" />
	</delete>
	<!-- 获取所有的权限信息 -->
	<select id="allMenus" resultType="polar.island.core.entity.TreeEntity">
		select a.id as "id",a.parentId as parentId,a.name as text
		FROM <include refid="tables" />
		<include refid="orderCondition" />
	</select>
	<!-- 获取模板的所有菜单 -->
	<select id="modelMenus" resultType="MenuEntity" parameterType="string">
		SELECT
		<include refid="listColumns" />
		FROM  t_polar_menumodel_menu b left join
		<include refid="tables" />  on(a.id=b.menuId)
		where b.menuModelId=#{menuModelId}
		<include refid="orderCondition" />
	</select>
	<delete id="deleteModelMenuByMenuId" parameterType="string">
		delete from t_polar_menumodel_menu
		where menuId=#{menuId}
	</delete>
	<delete id="deleteModelMenuByModelId" parameterType="string">
		delete from t_polar_menumodel_menu
		where menuModelId=#{modelId}
	</delete>
	<insert id="insertModelMenu" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		t_polar_menumodel_menu
		(
			menuId,
			menuModelId
		) VALUES (
			#{menuId},
			#{menuModelId}
		)
	</insert>
	<select id="maxOrderNum" resultType="long" >
		SELECT max(a.orderNum) from
		<include refid="tables" />  
	</select>
	<!-- 获取用户菜单  -->
	<select id="userMenus" resultType="MenuEntity" parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM 
		<include refid="tables" /> left join t_polar_menumodel_menu b on(a.id=b.menuId) left join t_polar_user_menu c on(b.menuModelId=c.menuModelId)
		where c.userId =#{userId}
		ORDER BY a.orderNum ASC
	</select>
	<!-- 获取用户菜单  -->
	<select id="defaultMenus" resultType="MenuEntity">
		SELECT
		<include refid="detailColumns" />
		FROM 
		<include refid="tables" /> left join t_polar_menumodel_menu b on(a.id=b.menuId) LEFT JOIN t_polar_menu_model c on (c.id =b.menuModelId)
		where c.defaultMenu=1
		ORDER BY a.orderNum ASC
	</select>
</mapper>
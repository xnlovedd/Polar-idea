<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="polar.island.inlay.records.dao.RecordsDao">
	<!-- 列表的列名 -->
	<sql id="listColumns">
			a.id AS "id",
			a.vistIp AS "vistIp",
			a.pageName AS "pageName",
			a.vistUrl AS "vistUrl",
			a.vistPlatform AS "vistPlatform",
			a.vistDate AS "vistDate",
			b.userName AS "vistPeople"
	</sql>
	<!-- 详情的列名 -->
	<sql id="detailColumns">
			a.id AS "id",
			a.vistIp AS "vistIp",
			a.pageName AS "pageName",
			a.vistUrl AS "vistUrl",
			a.vistPlatform AS "vistPlatform",
			a.vistDate AS "vistDate",
			b.userName AS "vistPeople"
	</sql>
	<!-- 表名,可能查询时会和一些其他的表关联 -->
	<sql id="tables">
		t_polar_vist_record a left join t_polar_user b on(a.vistPeople=b.id)
	</sql>
	<!-- 表名 -->
	<sql id="table">
		t_polar_vist_record
	</sql>
	<!-- 查询多条数据时的条件 -->
	<sql id="searchMultiWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="pageName != null and pageName != ''">
				AND a.pageName like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{pageName}+'%'
					</when>
					<otherwise>
						concat('%',#{pageName},'%')
					</otherwise>
				</choose>
			</if>
			<if test="vistUrl != null and vistUrl != ''">
				AND a.vistUrl like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{vistUrl}+'%'
					</when>
					<otherwise>
						concat('%',#{vistUrl},'%')
					</otherwise>
				</choose>
			</if>
			<if test="vistPlatform != null">
				AND a.vistPlatform=#{vistPlatform}
			</if>
			<if test="vistDate != null">
				AND a.vistDate=#{vistDate}
			</if>
			<if test="startDate != null">
				AND a.vistDate&gt;#{startDate}
			</if>
			<if test="endDate != null">
				AND a.vistDate&lt;#{endDate}
			</if>
			<if test="vistPeople != null and vistPeople != ''">
				AND b.userName like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{vistPeople}+'%'
					</when>
					<otherwise>
						concat('%',#{vistPeople},'%')
					</otherwise>
				</choose>
			</if>
			<if test="vistIp != null and vistIp != ''">
				AND a.vistIp like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{vistIp}+'%'
					</when>
					<otherwise>
						concat('%',#{vistIp},'%')
					</otherwise>
				</choose>

			</if>
		</where>
	</sql>
	<!-- 查询单条数据时的条件 -->
	<sql id="searchOneWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="pageName != null and pageName != ''">
				AND a.pageName=#{pageName}
			</if>
			<if test="vistUrl != null and vistUrl != ''">
				AND a.vistUrl=#{vistUrl}
			</if>
			<if test="vistPlatform != null">
				AND a.vistPlatform=#{vistPlatform}
			</if>
			<if test="vistDate != null">
				AND a.vistDate=#{vistDate}
			</if>
			<if test="vistPeople != null and vistPeople != ''">
				AND a.vistPeople=#{vistPeople}
			</if>
			<if test="vistIp != null and vistIp != ''">
				AND a.vistIp=#{vistIp}
			</if>
		</where>
	</sql>	
	<!-- 排序条件 -->
	<sql id="orderCondition">
		<choose>
			<when test="sort !=null and sort !=''">
				order by
				<choose>
					<when test="sort=='pageName'">a.pageName ${order}</when>
					<when test="sort=='vistUrl'">a.vistUrl ${order}</when>
					<when test="sort=='vistPlatform'">a.vistPlatform ${order}</when>
					<when test="sort=='vistDate'">a.vistDate ${order}</when>
					<when test="sort=='vistPeople'">a.vistPeople ${order}</when>
					<when test="sort=='vistIp'">a.vistIp ${order}</when>
					<!--默认排序，条件都不满足时，使用此条件，其兼容sqlserver的排序 -->
					<otherwise>(select 0)</otherwise>
				</choose>
			</when>
			<otherwise>
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						order by (SELECT 0)
					</when>
				</choose>
			</otherwise>
		</choose>
	</sql>
	<!-- 删除条件(物理删除的删除条件) -->
	<sql id="deletePhysicalWheres">
		WHERE 1!=1
		<trim prefix="OR" prefixOverrides="AND">
			<if test="id != null and id != ''">
				AND id=#{id}
			</if>
				<if test="pageName != null and pageName != ''">
					AND pageName=#{pageName}
				</if>
				<if test="vistUrl != null and vistUrl != ''">
					AND vistUrl=#{vistUrl}
				</if>
				<if test="vistPlatform != null">
					AND vistPlatform=#{vistPlatform}
				</if>
				<if test="vistDate != null">
					AND vistDate=#{vistDate}
				</if>
				<if test="vistPeople != null and vistPeople != ''">
					AND vistPeople=#{vistPeople}
				</if>
				<if test="vistIp != null and vistIp != ''">
				AND a.vistIp=#{vistIp}
			</if>
		</trim>
	</sql>
	<insert id="insert" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		<include refid="table" />
		(

			pageName,
			vistUrl,
			vistPlatform,
			vistDate,
			vistPeople,
			vistIp
		) VALUES (

			#{pageName},
			#{vistUrl},
			#{vistPlatform},
			#{vistDate},
			#{vistPeople},
			#{vistIp}
		)
	</insert>
	<!-- 查询一条数据(依据数据编号) -->
	<select id="selectOneById" resultType="RecordsEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		where a.id=#{id}
	</select>
	<!-- 查询一条数据（依据查询条件） -->
	<select id="selectOneByCondition" resultType="RecordsEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchOneWheres" />
	</select>
	<!-- 查询集合 -->
	<select id="selectList" resultType="RecordsEntity"
		parameterType="java.util.Map">
		SELECT
		<include refid="listColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
		<include refid="orderCondition" />
	</select>
	<!-- 查询导出数据集合 -->
	<select id="selectExportList" resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
		<include refid="orderCondition" />
	</select>
	<!-- 查询带有分页的列表 -->
	<select id="selectPageList" resultType="RecordsEntity"
		parameterType="java.util.Map">
		<choose>
			<when test="'${polar_dataBaseType}' == 'oracle'">
				SELECT * FROM (
				select rownum rowsize,innertable.* from
				(
				SELECT <include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				) innertable
				)
				WHERE rowsize > #{pageStartNumber} and rowsize &lt;= #{pageOffsetNumber}
			</when>
			<when test="'${polar_dataBaseType}' == 'sqlServer'">
				SELECT TOP ${rows} A.*
				FROM
				(
				SELECT
				ROW_NUMBER() OVER (<include refid="orderCondition" />) AS RowNumber,
				<include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				)   as A
				WHERE RowNumber > #{pageStartNumber}
			</when>
			<otherwise>
				SELECT
				<include refid="listColumns" />
				FROM
				<include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				limit #{pageStartNumber},#{pageOffsetNumber}
			</otherwise>
		</choose>
	</select>
	<!-- 依据条件查询符合条件的数量 -->
	<select id="selectCount" resultType="long" parameterType="java.util.Map">
		SELECT count(a.id)
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
	</select>
	<!-- 依据编号更新数据，所有字段都更新。 -->
	<update id="updateAll" parameterType="java.util.Map">
		update
		<include refid="table" />
		set
			pageName=#{pageName},
			vistUrl=#{vistUrl},
			vistPlatform=#{vistPlatform},
			vistDate=#{vistDate},
			vistPeople=#{vistPeople},
			vistIp=#{vistIp}
		where id=#{id}
	</update>
	<!-- 依据编号更新数据，更新存在的字段,有效性字段也可更新。 -->
	<update id="updateField" parameterType="java.util.Map">
		update
		<include refid="table" />
		<trim prefix="set" prefixOverrides=",">
				<if test="_parameter.containsKey('pageName')">
					,pageName=#{pageName}
				</if>
				<if test="_parameter.containsKey('vistUrl')">
					,vistUrl=#{vistUrl}
				</if>
				<if test="_parameter.containsKey('vistIp')">
					,vistIp=#{vistIp}
				</if>
				<if test="_parameter.containsKey('vistPlatform')">
					,vistPlatform=#{vistPlatform}
				</if>
				<if test="_parameter.containsKey('vistDate')">
					,vistDate=#{vistDate}
				</if>
				<if test="_parameter.containsKey('vistPeople')">
					,vistPeople=#{vistPeople}
				</if>
		</trim>
		where id=#{id}
	</update>
	<!-- 依据编号物理删除 -->
	<delete id="deleteByIdPhysical" parameterType="string">
		delete from
		<include refid="table" />
		where id=#{id}
	</delete>
	<!-- 依据条件物理删除 -->
	<delete id="deleteByConditionPhysical" parameterType="string">
		delete from
		<include refid="table" />
		<include refid="deletePhysicalWheres" />
	</delete>
</mapper>
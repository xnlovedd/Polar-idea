<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="polar.island.inlay.menuModel.dao.MenuModelDao">
	<!-- 列表的列名 -->
	<sql id="listColumns">
			a.id AS "id",
			a.name AS "name",
			a.info AS "info",
			a.defaultMenu AS "defaultMenu"
	</sql>
	<!-- 详情的列名 -->
	<sql id="detailColumns">
			a.id AS "id",
			a.name AS "name",
			a.info AS "info",
			a.defaultMenu AS "defaultMenu"
	</sql>
	<!-- 表名,可能查询时会和一些其他的表关联 -->
	<sql id="tables">
		t_polar_menu_model a
	</sql>
	<!-- 表名 -->
	<sql id="table">
		t_polar_menu_model
	</sql>
	<!-- 查询多条数据时的条件 -->
	<sql id="searchMultiWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="name != null and name != ''">
				AND a.name=#{name}
			</if>
			<if test="info != null and info != ''">
				AND a.info=#{info}
			</if>
			<if test="defaultMenu != null">
				AND a.defaultMenu=#{defaultMenu}
			</if>
		</where>
	</sql>
	<!-- 查询单条数据时的条件 -->
	<sql id="searchOneWheres">
		<where>
			<if test="id != null and id != ''">
				AND a.id=#{id}
			</if>
			<if test="name != null and name != ''">
				AND a.name like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{name}+'%'
					</when>
					<otherwise>
						concat('%',#{name},'%')
					</otherwise>
				</choose>
			</if>
			<if test="info != null and info != ''">
				AND a.info like
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						'%'+#{info}+'%'
					</when>
					<otherwise>
						concat('%',#{info},'%')
					</otherwise>
				</choose>
			</if>
			<if test="defaultMenu != null">
				AND a.defaultMenu=#{defaultMenu}
			</if>
		</where>
	</sql>	
	<!-- 排序条件 -->
	<sql id="orderCondition">
		<choose>
			<when test="sort !=null and sort !=''">
				order by
				<choose>
					<when test="sort=='name'">a.name ${order}</when>
					<when test="sort=='info'">a.info ${order}</when>
					<!--默认排序，条件都不满足时，使用此条件，其兼容sqlserver的排序 -->
					<otherwise>(select 0)</otherwise>
				</choose>
			</when>
			<otherwise>
				<choose>
					<when test="'${polar_dataBaseType}' == 'sqlServer'">
						order by (SELECT 0)
					</when>
				</choose>
			</otherwise>
		</choose>
	</sql>
	<!-- 删除条件(物理删除的删除条件) -->
	<sql id="deletePhysicalWheres">
		WHERE 1!=1
		<trim prefix="OR" prefixOverrides="AND">
			<if test="id != null and id != ''">
				AND id=#{id}
			</if>
				<if test="name != null and name != ''">
					AND name=#{name}
				</if>
				<if test="info != null and info != ''">
					AND info=#{info}
				</if>
				<if test="defaultMenu != null">
					AND defaultMenu=#{defaultMenu}
				</if>
		</trim>
	</sql>
	<insert id="insert" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		<include refid="table" />
		(

			name,
			info,
			defaultMenu
		) VALUES (

			#{name},
			#{info},
			#{defaultMenu}
		)
	</insert>
	<!-- 查询一条数据(依据数据编号) -->
	<select id="selectOneById" resultType="MenuModelEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		where a.id=#{id}
	</select>
	<!-- 查询一条数据（依据查询条件） -->
	<select id="selectOneByCondition" resultType="MenuModelEntity"
		parameterType="string">
		SELECT
		<include refid="detailColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchOneWheres" />
	</select>
	<!-- 查询集合 -->
	<select id="selectList" resultType="MenuModelEntity"
		parameterType="java.util.Map">
		SELECT
		<include refid="listColumns" />
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
		<include refid="orderCondition" />
	</select>
	<!-- 查询带有分页的列表 -->
	<select id="selectPageList" resultType="MenuModelEntity"
		parameterType="java.util.Map">
		<choose>
			<when test="'${polar_dataBaseType}' == 'oracle'">
				SELECT * FROM (
				select rownum rowsize,innertable.* from
				(
				SELECT <include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				) innertable
				)
				WHERE rowsize > #{pageStartNumber} and rowsize &lt;= #{pageOffsetNumber}
			</when>
			<when test="'${polar_dataBaseType}' == 'sqlServer'">
				SELECT TOP ${rows} A.*
				FROM
				(
				SELECT
				ROW_NUMBER() OVER (<include refid="orderCondition" />) AS RowNumber,
				<include refid="listColumns" />
				FROM <include refid="tables" />
				<include refid="searchMultiWheres" />
				)   as A
				WHERE RowNumber > #{pageStartNumber}
			</when>
			<otherwise>
				SELECT
				<include refid="listColumns" />
				FROM
				<include refid="tables" />
				<include refid="searchMultiWheres" />
				<include refid="orderCondition" />
				limit #{pageStartNumber},#{pageOffsetNumber}
			</otherwise>
		</choose>
	</select>
	<!-- 依据条件查询符合条件的数量 -->
	<select id="selectCount" resultType="long" parameterType="java.util.Map">
		SELECT count(a.id)
		FROM
		<include refid="tables" />
		<include refid="searchMultiWheres" />
	</select>
	<!-- 依据编号更新数据，所有字段都更新。 -->
	<update id="updateAll" parameterType="java.util.Map">
		update
		<include refid="table" />
		set
			name=#{name},
			info=#{info},
			defaultMenu=#{defaultMenu}
		where id=#{id}
	</update>
	<!-- 依据编号更新数据，更新存在的字段,有效性字段也可更新。 -->
	<update id="updateField" parameterType="java.util.Map">
		update
		<include refid="table" />
		<trim prefix="set" prefixOverrides=",">
				<if test="_parameter.containsKey('name')">
					,name=#{name}
				</if>
				<if test="_parameter.containsKey('info')">
					,info=#{info}
				</if>
				<if test="_parameter.containsKey('defaultMenu')">
					,defaultMenu=#{defaultMenu}
				</if>
		</trim>
		where id=#{id}
	</update>
	<!-- 依据编号物理删除 -->
	<delete id="deleteByIdPhysical" parameterType="string">
		delete from
		<include refid="table" />
		where id=#{id}
	</delete>
	<!-- 依据条件物理删除 -->
	<delete id="deleteByConditionPhysical" parameterType="string">
		delete from
		<include refid="table" />
		<include refid="deletePhysicalWheres" />
	</delete>
	
	<update id="cleanDefault" >
		update
		<include refid="table" />
		set defaultMenu=0
	</update>
	<!-- 获取用户的所有菜单 -->
	<select id="userMenuModels" resultType="MenuModelEntity" parameterType="string">
		SELECT<include refid="detailColumns" />
		FROM t_polar_user_menu b left join
		<include refid="tables" /> on (a.id=b.menuModelId)
		where b.userId=#{userId}
	</select>
	<!-- 依据用户编号删除用户-菜单模板 -->
	<delete id="deleteUserMenuByUserId" parameterType="string">
		delete from
		t_polar_user_menu
		where userId=#{userId}
	</delete>
	<!-- 依据菜单模板编号删除用户-菜单模板 -->
	<delete id="deleteUserMenuByMenuModelId" parameterType="string">
		delete from
		t_polar_user_menu
		where menuModelId=#{menuModelId}
	</delete>
	<!-- 增加用户菜单 -->
	<insert id="insertUserMenu" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		t_polar_user_menu
		(
			menuModelId,
			userId
		) VALUES (
			#{menuModelId},
			#{userId}
		)
	</insert>
</mapper>
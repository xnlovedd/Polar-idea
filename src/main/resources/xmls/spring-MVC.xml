<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 开启注解 类注释： @Controller 控制器层标示 @RequestMapping("/user") 设置访问路径，如果写在类前面，表示此类前缀为此， 
		@RequestMapping(value="/add",method=RequestMethod.GET) 配置类或者方法的访问方法 方法配置： 
		方法需含有request和response对象，返回类型为ModelAndView，根据xml配置返回数据，可以使用request.setAttribute("result", 
		"aaa");设置作用域数据 配置返回字符串，value为访问路径 @RequestMapping(value="getJosn.do", produces="text/html;charset=UTF-8") 
		@ResponseBody -->
	<!-- 不使用此方法扫描，会导致/index.*,/index/指向 /index路径 -->
	<!-- <mvc:annotation-driven /> -->
	<!-- 配置注解扫描包 -->
	<context:component-scan base-package="com.**"
		use-default-filters="false" >
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:component-scan base-package="cn.**"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:component-scan base-package="polar.**"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<bean id="validator" class="polar.island.core.validator.Validator">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
	</bean>

	<bean name="handlerAdapter" class="polar.island.web.handler.JsonWebHandlerAdapter">
		<property name="logger" ref="loggerService"></property>
		<property name="logInUrls">
			<list>
				<value>/logIn</value>
			</list>
		</property>
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
				<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter">
					<property name="gson" >
						<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="staticMethod" value="polar.island.core.util.GsonUtil.getGson"/>
						</bean>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean name="handlerMapping"
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="useTrailingSlashMatch" value="false"></property>
		<property name="useSuffixPatternMatch" value="false"></property>

	</bean>
	<!--配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="prefix" value="/"></property> <property name="suffix" 
			value=".jsp" /> -->
		<!-- <property name="suffix" value=".jsp"></property> -->
	</bean>
	<!-- 静态资源配置 -->
	<mvc:resources location="/static/" mapping="/static/**" />
	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为10M -->
		<property name="maxUploadSize" value="20480000" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
</beans>
